{"name":"actionscript-oauth2","body":"# ActionScript OAuth 2.0 Library\r\n\r\nAn ActionScript 3 library for interfacing with OAuth 2.0 services, implemented according to the [OAuth 2.0 v2.15 specification](http://tools.ietf.org/html/draft-ietf-oauth-v2-15).\r\n\r\n## Overview\r\n\r\nThis library is built for use with Flash/Flex/AIR projects to facilitate communication with OAuth 2.0 services.  It provides mechanisms to authenticate against OAuth 2.0 servers using all standard authentication and authorization workflows.\r\n\r\nThis project was first mentioned in my blog post at http://blogs.adobe.com/charles/2012/05/oauth-2-0-library-for-actionscript.html.\r\n\r\n### Features\r\n\r\nThe ActionScript OAuth 2.0 Library supports the following features...\r\n\r\n* Ability to [fetch an access token](http://tools.ietf.org/html/draft-ietf-oauth-v2-15#section-4) via the OAuth 2.0 supported workflows...\r\n  * [Authorization Code Grant workflow](http://tools.ietf.org/html/draft-ietf-oauth-v2-15#section-4.1)\r\n  * [Implicit Grant workflow](http://tools.ietf.org/html/draft-ietf-oauth-v2-15#section-4.2)\r\n  * [Resource Owner Password Credentials workflow](http://tools.ietf.org/html/draft-ietf-oauth-v2-15#section-4.3)\r\n* Ability to [refresh an access token](http://tools.ietf.org/html/draft-ietf-oauth-v2-15#section-6)\r\n* Robust and adjustable logging\r\n* Ability to log in, view, and interact with the user consent page within a given StageWebView object \r\n\r\n### Dependencies\r\n* [as3corelib](https://github.com/mikechambers/as3corelib)\r\n* [as3commons-logging](http://code.google.com/p/as3-commons/)\r\n\r\n## Documentation\r\n\r\n### Usage\r\n\r\nTo use the library, simply drop in the SWC (or the source) into your project, along with the appropriate dependencies, and follow the usage below...\r\n\r\n\t// set up our StageWebView object to use our visible stage\r\n\tstageWebView.stage = stage;\r\n\t \r\n\t// set up the call\r\n\tvar oauth2:OAuth2 = new OAuth2(\"https://accounts.google.com/o/oauth2/auth\", \"https://accounts.google.com/o/oauth2/token\", LogSetupLevel.ALL);\r\n\tvar grant:IGrantType = new AuthorizationCodeGrant(stageWebView,\t\t\t\t\t\t// the StageWebView object for which to display the user consent screen\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \"INSERT_CLIENT_ID_HERE\",\t\t\t// your client ID\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \"INSERT_CLIENT_SECRET_HERE\",\t\t// your client secret\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \"INSERT_REDIRECT_URI_HERE\",\t\t// your redirect URI\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \"INSERT_SCOPE_HERE\",\t\t\t\t// (optional) your scope\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \"INSERT_STATE_HERE\");\t\t\t\t// (optional) your state\r\n\t \r\n\t// make the call\r\n\toauth2.addEventListener(GetAccessTokenEvent.TYPE, onGetAccessToken);\r\n\toauth2.getAccessToken(grant);\r\n\t \r\n\tfunction onGetAccessToken(getAccessTokenEvent:GetAccessTokenEvent):void\r\n\t{\r\n\t\tif (getAccessTokenEvent.errorCode == null && getAccessTokenEvent.errorMessage == null)\r\n\t\t{\r\n\t\t\t// success!\r\n\t\t\ttrace(\"Your access token value is: \" + getAccessTokenEvent.accessToken);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t// fail :(\r\n\t\t}\r\n\t}  // onGetAccessToken\r\n\r\n### Reference\r\n\r\nYou can find the full ASDocs for the project [here](http://charlesbihis.github.com/actionscript-oauth2/docs/).\r\n\r\n## Author\r\n\r\n* Created by Charles Bihis\r\n* Website: [www.whoischarles.com](http://www.whoischarles.com)\r\n* E-mail: [charles@whoischarles.com](mailto:charles@whoischarles.com)\r\n* Twitter: [@charlesbihis](http://www.twitter.com/charlesbihis)\r\n\r\n## License\r\n\r\nThe ActionScript OAuth 2.0 Library is licensed under the [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0).","tagline":"An ActionScript 3 library for interfacing with OAuth 2.0 services","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}